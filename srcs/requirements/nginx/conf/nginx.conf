server {
		# IPv4
		listen      	443 ssl;

		# IPv6
		listen			[::]:443 ssl;
    	server_name		www.jgoad.42.fr jgoad.42.fr;

		# SSL information
		ssl_certificate			/etc/nginx/ssl/sslcert.crt;
		ssl_certificate_key		/etc/nginx/ssl/sslcert.key;
		ssl_protocols			TLSv1.2 TLSv1.3;	

    	# Set the file path to be used as the root of the web server
		root /var/www/html;

		# Set the default index files to be served as index, to be searched in order provided (this will be served when no path is requested by client)
		index index.php index.html index.htm;

		# General routing config for all requests (/ means that any directory request will be allowed)
    	location / {
			#Allow browsing of file directories (will return a directory list when a directory is requested instead of a file)
			autoindex on;

			# List of file types to try looking for, in the order they are to searched
			try_files $uri $uri/ /index.php?$query_string;
    	}

		# 404 Redirect routing (= means that only exact URI matches will be allowed)
		location = /404.html {
			# Specifies that a given location can only be used for internal requests.
			# For external requests, the client error 404 (Not Found) is returned. Internal requests are the following:
			internal;
		}

		# Specific routing config for php requests (~ means that only case-sensitive regex matches will be allowed)
		location ~ \.php$ {
			# List of file types to try looking for, in the order they are to searched
			try_files					$uri /index.php =404;
			
			# Regular expression to ensure incoming request is parsed appropriately, two parts are $fastcgi_script_name and $fastcgi_path_info
			fastcgi_split_path_info		^(.+\.php)(\.+)$;

			# fastcgi_pass is the nginx directive to redirect php requests to the php handler server (in this case wordpress)
			fastcgi_pass				wordpress:9000;
			
			# This defines the index file that should be appended to $fastcgi_script_name values that end with a slash (/).
			# This is often useful if the SCRIPT_FILENAME parameter is set to $document_root$fastcgi_script_name and the location 
			# block is configured to accept requests with info after the file.
			fastcgi_index				index.php;

			# Used to include common, shared config details in multiple locations
			include						fastcgi_params;

			# The array directive that can be used to set parameters to values. Most often, this is used in conjunction with Nginx 
			# variables to set FastCGI parameters to values specific to the request.
			fastcgi_param				SCRIPT_FILENAME $document_root$fastcgi_script_name;
		}
}
